{"version":3,"sources":["components/TodoList/TodoList.jsx","components/Search/Search.jsx","components/CurrentUser/CurrentUser.jsx","api/api.js","App.js","index.js"],"names":["TodoList","todos","userDeteil","className","map","todo","key","id","completed","type","checked","onChange","userId","title","value","onClick","Search","text","selectValue","changeList","name","CurrentUser","users","clearInfo","email","phone","url","getTodos","fetch","then","response","json","result","data","getUsers","App","state","todosNew","selectedUserId","input","select","componentDidMount","setState","changeSelectedUserId","event","target","clearUserInfo","hendleFilter","filter","includes","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"yQAIaA,G,YAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,WAAV,OACtB,yBAAKC,UAAU,YACb,sCAEA,wBAAIA,UAAU,kBAEXF,EAAMG,KAAI,SAAAC,GAAI,OACb,wBACEC,IAAKD,EAAKE,GACVJ,UAAS,yBAAoBE,EAAKG,WAC7B,8BAEL,2BACEL,UAAU,mBAEV,0BAAMA,UAAU,kBAAhB,OACA,0BAAMA,UAAU,kBAAkBE,EAAKE,IACvC,2BACEJ,UAAU,qBACVM,KAAK,WACLC,QAASL,EAAKG,YAAa,EAC3BG,SAAU,kBAAMN,EAAKG,cAIzB,yBACEL,UAAU,kBAEV,0BAAMA,UAAU,kBAAhB,YACA,0BAAMA,UAAU,kBAAkBE,EAAKO,SAGzC,uBACET,UAAU,mBAEV,0BAAMA,UAAU,kBAAhB,UACA,0BAAMA,UAAU,kBAAkBE,EAAKQ,QAGzC,4BACEJ,KAAK,SACLN,UAAU,mBACVW,OAAQT,EAAKO,OACbG,QAASb,GAJX,WAOGG,EAAKO,gBC/CLI,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,YAAaC,EAAtB,EAAsBA,WAAtB,OACpB,uCAEE,2BACEC,KAAK,QACLN,MAAOG,EACPN,SAAUQ,EACVV,KAAK,SAEP,4BACEW,KAAK,SACLN,MAAOI,EACPP,SAAUQ,GAEV,4BACEL,MAAM,OADR,OAKA,4BACEA,MAAM,UADR,UAKA,4BACEA,MAAM,aADR,gBCxBOO,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOV,EAAV,EAAUA,OAAQW,EAAlB,EAAkBA,UAAlB,OACzB,yBAAKpB,UAAU,eACb,6CAEGS,GAGH,4BACE,4BAAKU,EAAMV,EAAS,GAAGQ,MACvB,4BAAKE,EAAMV,EAAS,GAAGY,OACvB,4BAAKF,EAAMV,EAAS,GAAGa,QAGzB,4BACEhB,KAAK,SACLM,QAASQ,GAFX,WChBEG,EAAM,iCAECC,EAAW,kBACtBC,MAAM,GAAD,OAAIF,EAAJ,WACFG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAM,OAAIA,EAAOC,QACtBJ,MAAK,SAAA5B,GAAK,OAAIA,MAGNiC,EAAW,kBACtBN,MAAM,GAAD,OAAIF,EAAJ,WACFG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAM,OAAIA,EAAOC,QACtBJ,MAAK,SAAAP,GAAK,OAAIA,MCuFJa,E,4MA5FbC,MAAQ,CACNC,SAAU,GACVpC,MAAO,GACPqB,MAAO,GACPgB,eAAgB,EAChBC,MAAO,GACPC,OAAQ,I,EAGVC,kBAAoB,WAClBd,IACGE,MAAK,SAAA5B,GAAK,OAAI,EAAKyC,SAAS,CAC3BzC,QACAoC,SAAUpC,OAGdiC,IACGL,MAAK,SAAAP,GAAK,OAAI,EAAKoB,SAAS,CAAEpB,c,EAGnCqB,qBAAuB,SAACC,GACtB,EAAKF,SAAS,CAAEJ,eAAgBM,EAAMC,OAAO/B,S,EAG/CgC,cAAgB,WACd,EAAKJ,SAAS,CAAEJ,gBAAgB,K,EAGlCS,aAAe,SAACH,GAAW,IAAD,EACAA,EAAMC,OAAtBzB,EADgB,EAChBA,KAAMN,EADU,EACVA,MACNb,EAAU,EAAKmC,MAAfnC,MAWR,GATA,EAAKyC,SAAL,eAAiBtB,EAAON,IAEX,UAATM,GACF,EAAKsB,SAAS,CACZL,SAAUpC,EAAM+C,QAAO,SAAA3C,GAAI,OAAmB,OAAfA,EAAKQ,OAC/BR,EAAKQ,MAAMoC,SAASnC,QAIhB,WAATM,EACF,OAAQN,GACN,IAAK,SACH,EAAK4B,SAAS,CAAEL,SAAUpC,EAAM+C,QAAO,SAAA3C,GAAI,OAAKA,EAAKG,eACrD,MACF,IAAK,YACH,EAAKkC,SAAS,CAAEL,SAAUpC,EAAM+C,QAAO,SAAA3C,GAAI,OAAIA,EAAKG,eACpD,MACF,QACE,EAAKkC,SAAS,CAAEL,SAAUpC,M,uDAKxB,IAAD,EAOHiD,KAAKd,MALPC,EAFK,EAELA,SACAf,EAHK,EAGLA,MACAgB,EAJK,EAILA,eACAC,EALK,EAKLA,MACAC,EANK,EAMLA,OAGF,OACE,yBAAKrC,UAAU,OACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CACEc,KAAMsB,EACNpB,WAAY+B,KAAKH,aACjB7B,YAAasB,IAEf,kBAAC,EAAD,CACEvC,MAAOoC,EACPnC,WAAYgD,KAAKP,wBAIrB,yBAAKxC,UAAU,gBACZmC,EACC,kBAAC,EAAD,CACE1B,OAAQ0B,EACRhB,MAAOA,EACPC,UAAW2B,KAAKJ,gBAEhB,yB,GAtFIK,IAAMC,WCHxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.fcf4eb34.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.scss';\nimport PropTypes from 'prop-types';\n\nexport const TodoList = ({ todos, userDeteil }) => (\n  <div className=\"TodoList\">\n    <h2>Todos:</h2>\n\n    <ul className=\"TodoList__list\">\n\n      {todos.map(todo => (\n        <li\n          key={todo.id}\n          className={`TodoList__item ${todo.completed\n            && 'TodoList__item--completed'}`}\n        >\n          <label\n            className=\"TodoList__label\"\n          >\n            <span className=\"TodoList__head\">ID:</span>\n            <span className=\"TodoList__text\">{todo.id}</span>\n            <input\n              className=\"TodoList__checkbox\"\n              type=\"checkbox\"\n              checked={todo.completed && true}\n              onChange={() => todo.completed}\n            />\n          </label>\n\n          <div\n            className=\"TodoList__user\"\n          >\n            <span className=\"TodoList__head\">User ID:</span>\n            <span className=\"TodoList__text\">{todo.userId}</span>\n          </div>\n\n          <p\n            className=\"TodoList__title\"\n          >\n            <span className=\"TodoList__head\">Title:</span>\n            <span className=\"TodoList__text\">{todo.title}</span>\n          </p>\n\n          <button\n            type=\"button\"\n            className=\"TodoList__button\"\n            value={+todo.userId}\n            onClick={userDeteil}\n          >\n            User&nbsp;\n            {todo.userId}\n          </button>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  userDeteil: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Search = ({ text, selectValue, changeList }) => (\n  <div>\n    Search:\n    <input\n      name=\"input\"\n      value={text}\n      onChange={changeList}\n      type=\"text\"\n    />\n    <select\n      name=\"select\"\n      value={selectValue}\n      onChange={changeList}\n    >\n      <option\n        value=\"all\"\n      >\n        All\n      </option>\n      <option\n        value=\"active\"\n      >\n        Active\n      </option>\n      <option\n        value=\"completed\"\n      >\n        Completed\n      </option>\n    </select>\n  </div>\n);\n\nSearch.propTypes = {\n  text: PropTypes.string.isRequired,\n  selectValue: PropTypes.string.isRequired,\n  changeList: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const CurrentUser = ({ users, userId, clearInfo }) => (\n  <div className=\"CurrentUser\">\n    <h2>\n      Selected user:\n      {userId}\n    </h2>\n\n    <ul>\n      <li>{users[userId - 1].name}</li>\n      <li>{users[userId - 1].email}</li>\n      <li>{users[userId - 1].phone}</li>\n    </ul>\n\n    <button\n      type=\"button\"\n      onClick={clearInfo}\n    >\n      Clear\n    </button>\n  </div>\n);\n\nCurrentUser.propTypes = {\n  users: PropTypes.arrayOf(PropTypes.object).isRequired,\n  userId: PropTypes.string.isRequired,\n  clearInfo: PropTypes.func.isRequired,\n};\n","const url = 'https://mate-api.herokuapp.com';\n\nexport const getTodos = () => (\n  fetch(`${url}/todos`)\n    .then(response => response.json())\n    .then(result => result.data)\n    .then(todos => todos)\n);\n\nexport const getUsers = () => (\n  fetch(`${url}/users`)\n    .then(response => response.json())\n    .then(result => result.data)\n    .then(users => users)\n);\n","import React from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\nimport { Search } from './components/Search';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos, getUsers } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    todosNew: [],\n    todos: [],\n    users: [],\n    selectedUserId: 0,\n    input: '',\n    select: '',\n  };\n\n  componentDidMount = () => {\n    getTodos()\n      .then(todos => this.setState({\n        todos,\n        todosNew: todos,\n      }));\n\n    getUsers()\n      .then(users => this.setState({ users }));\n  }\n\n  changeSelectedUserId = (event) => {\n    this.setState({ selectedUserId: event.target.value });\n  }\n\n  clearUserInfo = () => {\n    this.setState({ selectedUserId: false });\n  }\n\n  hendleFilter = (event) => {\n    const { name, value } = event.target;\n    const { todos } = this.state;\n\n    this.setState({ [name]: value });\n\n    if (name === 'input') {\n      this.setState({\n        todosNew: todos.filter(todo => todo.title !== null\n          && todo.title.includes(value)),\n      });\n    }\n\n    if (name === 'select') {\n      switch (value) {\n        case 'active':\n          this.setState({ todosNew: todos.filter(todo => !todo.completed) });\n          break;\n        case 'completed':\n          this.setState({ todosNew: todos.filter(todo => todo.completed) });\n          break;\n        default:\n          this.setState({ todosNew: todos });\n      }\n    }\n  }\n\n  render() {\n    const {\n      todosNew,\n      users,\n      selectedUserId,\n      input,\n      select,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <Search\n            text={input}\n            changeList={this.hendleFilter}\n            selectValue={select}\n          />\n          <TodoList\n            todos={todosNew}\n            userDeteil={this.changeSelectedUserId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {selectedUserId ? (\n            <CurrentUser\n              userId={selectedUserId}\n              users={users}\n              clearInfo={this.clearUserInfo}\n            />\n          ) : 'No user selected'}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
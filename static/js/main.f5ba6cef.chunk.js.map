{"version":3,"sources":["components/TodoList/TodoList.jsx","components/Search/Search.jsx","components/CurrentUser/CurrentUser.jsx","api/api.js","App.js","index.js"],"names":["TodoList","todos","userDeteil","input","list","select","filter","todo","completed","title","includes","className","map","key","id","type","checked","onChange","userId","value","onClick","Search","text","selectValue","changeList","name","CurrentUser","email","phone","clearInfo","defaultProps","url","getTodos","fetch","then","response","json","result","data","getUsers","users","App","state","user","selectedUserId","componentDidMount","setState","changeSelectedUserId","event","target","find","us","clearUserInfo","handleFilter","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f5ba6cef.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.scss';\nimport PropTypes from 'prop-types';\n\nexport const TodoList = ({ todos, userDeteil, input, select }) => {\n  let list = todos;\n\n  switch (select) {\n    case 'active':\n      list = todos.filter(todo => !todo.completed);\n      break;\n    case 'completed':\n      list = todos.filter(todo => todo.completed);\n      break;\n    default:\n      list = todos;\n  }\n\n  if (input !== '') {\n    list = list.filter(todo => todo.title !== null\n      && todo.title.includes(input));\n  }\n\n  return (\n    <div className=\"TodoList\">\n      <h2>Todos:</h2>\n\n      <ul className=\"TodoList__list\">\n\n        {list.map(todo => (\n          <li\n            key={todo.id}\n            className={`TodoList__item ${todo.completed\n              && 'TodoList__item--completed'}`}\n          >\n            <label\n              className=\"TodoList__label\"\n            >\n              <span className=\"TodoList__head\">ID:</span>\n              <span className=\"TodoList__text\">{todo.id}</span>\n              <input\n                className=\"TodoList__checkbox\"\n                type=\"checkbox\"\n                checked={todo.completed && true}\n                onChange={() => todo.completed}\n              />\n            </label>\n\n            <div\n              className=\"TodoList__user\"\n            >\n              <span className=\"TodoList__head\">User ID:</span>\n              <span className=\"TodoList__text\">{todo.userId}</span>\n            </div>\n\n            <p\n              className=\"TodoList__title\"\n            >\n              <span className=\"TodoList__head\">Title:</span>\n              <span className=\"TodoList__text\">{todo.title}</span>\n            </p>\n\n            <button\n              type=\"button\"\n              className=\"TodoList__button\"\n              value={+todo.userId}\n              onClick={userDeteil}\n            >\n              User&nbsp;\n              {todo.userId}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  userDeteil: PropTypes.func.isRequired,\n  input: PropTypes.string.isRequired,\n  select: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Search = ({ text, selectValue, changeList }) => (\n  <div>\n    Search:\n    <input\n      name=\"input\"\n      value={text}\n      onChange={changeList}\n      type=\"text\"\n    />\n    <select\n      name=\"select\"\n      value={selectValue}\n      onChange={changeList}\n    >\n      <option\n        value=\"all\"\n      >\n        All\n      </option>\n      <option\n        value=\"active\"\n      >\n        Active\n      </option>\n      <option\n        value=\"completed\"\n      >\n        Completed\n      </option>\n    </select>\n  </div>\n);\n\nSearch.propTypes = {\n  text: PropTypes.string.isRequired,\n  selectValue: PropTypes.string.isRequired,\n  changeList: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const CurrentUser = ({ id, name, email, phone, clearInfo }) => (\n  <div className=\"CurrentUser\">\n    <h2>\n      Selected user:\n      {id}\n    </h2>\n\n    <ul>\n      <li>{name}</li>\n      <li>{email}</li>\n      {phone && <li>{phone}</li>}\n    </ul>\n\n    <button\n      type=\"button\"\n      onClick={clearInfo}\n    >\n      Clear\n    </button>\n  </div>\n);\n\nCurrentUser.defaultProps = {\n  phone: false,\n};\n\nCurrentUser.propTypes = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  phone: PropTypes.string,\n  clearInfo: PropTypes.func.isRequired,\n};\n","const url = 'https://mate-api.herokuapp.com';\n\nexport const getTodos = () => (\n  fetch(`${url}/todos`)\n    .then(response => response.json())\n    .then(result => result.data)\n    .then(todos => todos)\n);\n\nexport const getUsers = () => (\n  fetch(`${url}/users`)\n    .then(response => response.json())\n    .then(result => result.data)\n    .then(users => users)\n);\n","import React from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\nimport { Search } from './components/Search';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos, getUsers } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    users: [],\n    user: {},\n    selectedUserId: 0,\n    input: '',\n    select: '',\n  };\n\n  componentDidMount = () => {\n    getTodos()\n      .then(todos => this.setState({ todos }));\n\n    getUsers()\n      .then(users => this.setState({ users }));\n  }\n\n  changeSelectedUserId = (event) => {\n    const { users } = this.state;\n    const { value } = event.target;\n    const user = { ...users.find(us => us.id === +value) };\n\n    this.setState({\n      user,\n      selectedUserId: value,\n    });\n  }\n\n  clearUserInfo = () => {\n    this.setState({ selectedUserId: false });\n  }\n\n  handleFilter = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    const {\n      todos,\n      user,\n      selectedUserId,\n      input,\n      select,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <Search\n            text={input}\n            changeList={this.handleFilter}\n            selectValue={select}\n          />\n          <TodoList\n            todos={todos}\n            userDeteil={this.changeSelectedUserId}\n            input={input}\n            select={select}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {selectedUserId ? (\n            <CurrentUser\n              {...user}\n              clearInfo={this.clearUserInfo}\n            />\n          ) : 'No user selected'}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}